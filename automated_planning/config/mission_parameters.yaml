/**: # Wildcard: will load the configuration params to all nodes
  ros__parameters:
    drone:
      name: "d0"

      # Note that the Anafi will take control on its own when the battery level is too low
      # The Anafi will return to the original takeoff position
      # Unsure at what percentage this occurs at
      battery_limits_for_emergency:
        low_battery:      35.0  # [%]
        critical_battery: 25.0  # [%]

      # These battery limits are currently not used
      # Future work hehe
      battery_limits_per_action:
        takeoff: 25.0 # [%]
        move:    10.0 # [%] Unsure about this one, as the move could occur when moving towards the helipad
        search:  30.0 # [%]

      battery_usage_per_time_unit: # Estimated in the simulator
        track:  0.05896 # Slow movement
        move:   0.06201 # Movement speed of 3 m/s using internal commands

      velocity_limits:
        track:  0.2 # [m/s]
        move:   2.0 # [m/s] 

    locations:
      names: ["h0", "h1", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "elz0", "elz1"] 
      
      paths:
        # Define which paths are available from each location
        h0:   ["a0", "a3", "a5"]
        h1:   ["a0", "elz0"]
        a0:   ["h0", "a1", "a2"]
        a1:   ["a0", elz0]
        a2:   ["h1", "a0", "a3"]
        a3:   ["h0", "a2", "a4"]
        a4:   ["a3", "h1"]
        a5:   ["h0", "a6"]
        a6:   ["a5", "a7"]
        a7:   ["a6", "elz1"]
        elz0: ["a1"]
        elz1: ["a7"]

      recharge_available: ["h0", "h1"]  # All locations which support recharging battery
      resupply_available: ["h0", "h1"]  # All locations which support resupply of equipment
      landing_available:  ["h0", "h1", "elz0", "elz1"]  # All locations which support landing

      pos_ne: # North-East
        # Helipads 
        h0:   [  0.0,   0.0]
        h1:   [ 40.0,  40.0]
        
        # Areas to search
        a0:   [ 20.0,   0.0]
        a1:   [ 20.0, -20.0]
        a2:   [ 20.0,  20.0]
        a3:   [  0.0,  20.0]
        a4:   [  0.0,  40.0]
        a5:   [-20.0,   0.0]
        a6:   [-20.0, -20.0]
        a7:   [-20.0, -40.0]

        # Emergency landing locations
        elz0: [ 40.0, -20.0]
        elz1: [  0.0, -40.0]

      # Every position within location_radius assumed to be inside an area
      location_radius_m: 10.0 # Based on the area size in config.yaml 

    mission_init:
      start_location: "h0" # Currently defines the origin, which all locations based on (if using NED-frame)
      locations_available: ["h1", "a0", "a1" , "a2", "a3", "a4", "a5", "a6", "a7", "elz0", "elz1"] # Assuming no other drone nearby atm

      payload:
        num_markers: 2
        num_lifevests: 1

    mission_goals:
      locations_to_search: ["a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7"]
      landing_desired: false 
      preferred_landing_location: "h0" 
      possible_landing_locations: ["h1", "elz0", "elz1"]  # Different from locations.landing_available, as this 
                                                          # gives the locations which the drone is allowed to land based 
                                                          # on the mission itself


